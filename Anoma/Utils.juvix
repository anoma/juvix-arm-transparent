module Anoma.Utils;

import Stdlib.Prelude open;

--- A type describing the absence of a types.
--- NOTE: This can be used in instantiated interfaces for type parameters that are not used.
UNUSED : Type := Unit;

--- A type describing an unknown type that must be clarified.
--- NOTE: This can be used in instantiated interfaces for type parameters that are not unknown.
-- heindel: `not unknown` -> `not known`?
UNKOWN : Type := Unit;
-- heindel: spelling `UNKOWN`?

--- A trait for transforming values of a `DataType` into values of its
--- corresponding `RefType`. Values of `RefType` must have fixed size. For the
--- private testnet, the requirement can be relaxed by allowing ;RefType; to be
--- dynamically-sized.
trait
type Ref DataType RefType := mkRef {ref : DataType -> RefType};
